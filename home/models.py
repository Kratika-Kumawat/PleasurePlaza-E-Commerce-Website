from django.db import models


class Product(models.Model):
    product_name = models.CharField(max_length=1000)
    rating = models.FloatField()
    price = models.IntegerField()
    offers = models.TextField(max_length=100000)
    warranty = models.TextField(max_length=100000)
    highlights = models.TextField(max_length=1000000)
    easy_payment_opt = models.TextField(max_length=100000)
    seller = models.TextField(max_length=100000)
    description = models.TextField(max_length=1000000)
    in_the_box = models.CharField(max_length=100000)
    model_no = models.CharField(max_length=10000)
    product_description = models.TextField(max_length=1000000)
    company_name = models.CharField(max_length=1000)
    img1 = models.ImageField(upload_to='pic')
    img2 = models.ImageField(upload_to='pic')
    img3 = models.ImageField(upload_to='pic')
    img4 = models.ImageField(upload_to='pic')
    img5 = models.ImageField(upload_to='pic')
    installation_details = models.TextField(max_length=20000)
    technician_visit_details = models.TextField(max_length=100000)
    uninstallation_details = models.TextField(max_length=100000)
    warranty_summary = models.CharField(max_length=500)
    covered_in_warranty = models.TextField(max_length=100000)
    not_covered_in_warranty = models.TextField(max_length=100000)
    warranty_service_type = models.CharField(max_length=100)

    def __str__(self):
        return self.product_name


class Mobile(Product):
    browse_type = models.CharField(max_length=1000)
    sim_type = models.CharField(max_length=1000)
    color = models.CharField(max_length=1000)
    storage = models.CharField(max_length=1000)
    hybrid_sim = models.CharField(max_length=200)
    touch_screen = models.CharField(max_length=200)
    otg_compatible = models.CharField(max_length=200)
    quick_charging = models.CharField(max_length=200)
    display_size = models.CharField(max_length=1000)
    resolution = models.CharField(max_length=1000)
    resolution_type = models.CharField(max_length=1000)
    GPU = models.CharField(max_length=1000)
    display_type = models.CharField(max_length=1000)
    display_features = models.TextField(max_length=1000)
    operating_system = models.CharField(max_length=1000)
    processor_type = models.CharField(max_length=100)
    processor_core = models.CharField(max_length=100)
    internal_storage = models.CharField(max_length=100)
    RAM = models.CharField(max_length=100)
    primmary_camera_available = models.CharField(max_length=200)
    primary_camera = models.CharField(max_length=100)
    primary_camera_features = models.TextField(max_length=100000)
    secondary_camera_available = models.CharField(max_length=200)
    secondary_camera = models.CharField(max_length=100)
    secondary_camera_features = models.TextField(max_length=100000)
    flash = models.CharField(max_length=100)
    hd_recording = models.CharField(max_length=200)
    video_rec = models.CharField(max_length=200)
    frame_rate = models.CharField(max_length=100)
    digital_zoom = models.CharField(max_length=200)
    dual_camera_lens = models.CharField(max_length=100)
    Call_Wait_Hold = models.CharField(max_length=200)
    Hands_Free = models.CharField(max_length=200)
    Video_Call_Support = models.CharField(max_length=200)
    Phone_Book = models.CharField(max_length=200)
    Call_Timer = models.CharField(max_length=200)
    Speaker_Phone = models.CharField(max_length=5)
    Speed_Dialing = models.CharField(max_length=5)
    Call_Records = models.CharField(max_length=5)
    Logs = models.CharField(max_length=5)
    Network_Type = models.CharField(max_length=100)
    Supported_Networks = models.CharField(max_length=100)
    Internet_Connectivity = models.CharField(max_length=100)
    network_3g = models.CharField(max_length=5)
    GPRS = models.CharField(max_length=5)
    Pre_installed_Browser = models.CharField(max_length=100)
    Bluetooth_Support = models.CharField(max_length=5)
    Bluetooth_Version = models.CharField(max_length=100)
    WiFi = models.CharField(max_length=5)
    WiFi_Version = models.CharField(max_length=100)
    WiFi_Hotspot = models.CharField(max_length=5)
    USB_Connectivity = models.CharField(max_length=5)
    EDGE = models.CharField(max_length=5)
    Map_Support = models.CharField(max_length=100)
    GPS_Support = models.CharField(max_length=5)
    Smartphone = models.CharField(max_length=5)
    SIM_Size = models.CharField(max_length=100)
    Social_Networking_Phone = models.CharField(max_length=200)
    Removable_Battery = models.CharField(max_length=200)
    SMS = models.CharField(max_length=200)
    Voice_Input = models.CharField(max_length=200)
    Predictive_Text_Input = models.CharField(max_length=100)
    Sensors = models.CharField(max_length=1000)
    GPS_Type = models.CharField(max_length=1000)
    FM_Radio = models.CharField(max_length=200)
    Battery_Capacity = models.CharField(max_length=100)
    Width = models.CharField(max_length=100)
    Height = models.CharField(max_length=100)
    Depth = models.CharField(max_length=100)
    Weight = models.CharField(max_length=100)
    Warranty_Summary = models.CharField(max_length=1000)
    Domestic_Warranty = models.CharField(max_length=100)

    def __str__(self):
        return self.product_name


class Television(Product):
    display_size = models.CharField(max_length=200)
    screen_type = models.CharField(max_length=100)
    hd_technology_resolution = models.CharField(max_length=200)
    series = models.CharField(max_length=200)
    smart_tv = models.CharField(max_length=200)
    hdmi = models.CharField(max_length=200)
    usb = models.CharField(max_length=200)
    built_in_wifi = models.CharField(max_length=200)
    launch_year = models.CharField(max_length=100)
    wall_mount_included = models.CharField(max_length=100)
    picture_engine = models.CharField(max_length=100)
    picture_and_picture = models.CharField(max_length=100)
    view_angle = models.CharField(max_length=100)
    led_display_type = models.CharField(max_length=200)
    aspect_ratio = models.CharField(max_length=100)
    refresh_rate = models.CharField(max_length=100)
    supported_video_formats = models.CharField(max_length=1000)
    number_of_speakers = models.CharField(max_length=100)
    speaker_type = models.CharField(max_length=100)
    sound_technology = models.CharField(max_length=200)
    speaker_output = models.CharField(max_length=100)
    sound_mode = models.CharField(max_length=1000)
    processor = models.CharField(max_length=1000)
    graphic_processor = models.CharField(max_length=100)
    ram_capacity = models.CharField(max_length=100)
    storage_memory = models.CharField(max_length=100)
    supported_app_netflix = models.CharField(max_length=100)
    supported_app_youtube = models.CharField(max_length=100)
    supported_app_disneyplushotstar = models.CharField(max_length=100)
    supported_app_prime_video = models.CharField(max_length=100)
    supported_app_others = models.CharField(max_length=1000)
    supported_mobile_operating_system = models.CharField(max_length=100)
    operating_system_present = models.CharField(max_length=100)
    operating_system = models.CharField(max_length=100)
    screen_mirroring = models.CharField(max_length=100)
    app_store_type = models.CharField(max_length=1000)
    content_providers = models.CharField(max_length=10000)
    supported_devices_for_casting = models.CharField(max_length=200)
    system_languages = models.CharField(max_length=1000)
    bluetooth = models.CharField(max_length=100)
    built_in_wifi = models.CharField(max_length=100)
    ethernet = models.CharField(max_length=100)
    headphone_jack = models.CharField(max_length=100)
    color_screen = models.CharField(max_length=100)
    rf_capable = models.CharField(max_length=100)
    led_backlit_buttons = models.CharField(max_length=100)
    power_requirement = models.CharField(max_length=30)
    power_consumption = models.CharField(max_length=1000)
    clock = models.CharField(max_length=100)
    auto_power_off = models.CharField(max_length=100)
    sleep_timer = models.CharField(max_length=100)
    on_off_timer = models.CharField(max_length=100)
    child_lock = models.CharField(max_length=100)
    parental_control = models.CharField(max_length=100)
    width_height_depth = models.CharField(max_length=40)
    weight = models.CharField(max_length=200)
    stand_type = models.CharField(max_length=15)
    additional_features = models.TextField(max_length=100000)

    def __str__(self):
        return self.product_name


class Air_Conditioner(Product):
    brand = models.CharField(max_length=100)
    model_name = models.CharField(max_length=100)
    type = models.CharField(max_length=30)
    capacity_in_tons = models.CharField(max_length=100)
    star_rating = models.CharField(max_length=100)
    bee_rating_year = models.CharField(max_length=100)
    color = models.CharField(max_length=100)
    cooling_capacity = models.CharField(max_length=100)
    compressor = models.CharField(max_length=100)
    dehumidification = models.CharField(max_length=100)
    remote_control = models.CharField(max_length=100)
    operating_modes = models.CharField(max_length=100)
    condenser_coil = models.CharField(max_length=100)
    indoor_unit_whd = models.CharField(max_length=100)
    indoor_unit_weight = models.CharField(max_length=100)
    outdoor_unit_whd = models.CharField(max_length=100)
    outdoor_unit_weight = models.CharField(max_length=100)
    cooling_coverage_area = models.CharField(max_length=100)
    iseer = models.CharField(max_length=100)
    anti_bacteria_filter = models.CharField(max_length=100)
    dust_filter = models.CharField(max_length=100)
    auto_restart = models.CharField(max_length=100)
    power_requirement = models.CharField(max_length=100)
    power_consumption = models.CharField(max_length=100)
    

    def __str__(self):
        return self.product_name


class Washing_Machine(Product):
    brand = models.CharField(max_length=100)
    model_name = models.CharField(max_length=100)
    function_type = models.CharField(max_length=100)
    energy_rating = models.CharField(max_length=100)
    washing_capacity = models.CharField(max_length=100)
    washing_method = models.CharField(max_length=100)
    maximum_spin_speed = models.CharField(max_length=100)
    in_built_heater = models.CharField(max_length=100)
    color = models.CharField(max_length=100)
    dryer_type = models.CharField(max_length=100)
    water_level_selector = models.CharField(max_length=100)
    fuzzy_logic = models.CharField(max_length=100)
    hot_wash = models.CharField(max_length=100)
    pre_wash_soak = models.CharField(max_length=100)
    quick_wash = models.CharField(max_length=100)
    spin_only = models.CharField(max_length=100)
    spin_rinse = models.CharField(max_length=100)
    tub_material = models.CharField(max_length=100)
    wheel_support = models.CharField(max_length=100)
    digital_display = models.CharField(max_length=100)
    lint_filter = models.CharField(max_length=100)
    width = models.CharField(max_length=100)
    height = models.CharField(max_length=100)
    depth = models.CharField(max_length=100)
    weight = models.CharField(max_length=100)

    def __str__(self):
        return self.product_name


class Refrigerator(Product):
    type = models.CharField(max_length=100)
    refrigerator_type = models.CharField(max_length=100)
    defrosting_type = models.CharField(max_length=100)
    compressor_type = models.CharField(max_length=100)
    capacity = models.CharField(max_length=100)
    number_of_doors = models.CharField(max_length=100)
    star_rating = models.CharField(max_length=100)
    coolpad = models.CharField(max_length=100)
    toughened_glass = models.CharField(max_length=100)
    built_in_stabilizer = models.CharField(max_length=100)
    air_flow_type = models.CharField(max_length=100)
    temperature_control = models.CharField(max_length=100)
    express_freezing = models.CharField(max_length=100)
    moisture_control = models.CharField(max_length=100)
    convertible_refrigerator = models.CharField(max_length=100)
    other_performance_features = models.CharField(max_length=100)
    body_material = models.CharField(max_length=100)
    shelf_material = models.CharField(max_length=100)
    design = models.CharField(max_length=100)
    door_finish = models.CharField(max_length=100)
    interior_finish = models.CharField(max_length=100)
    clock = models.CharField(max_length=100)
    door_lock = models.CharField(max_length=100)
    gasket_type = models.CharField(max_length=100)
    removable_gasket = models.CharField(max_length=100)
    door_alarm = models.CharField(max_length=100)
    deodorizer = models.CharField(max_length=100)
    water_dispenser = models.CharField(max_length=100)
    removable_rack = models.CharField(max_length=100)
    flexible_rack = models.CharField(max_length=100)
    power_requirement = models.CharField(max_length=100)
    bee_rating_year = models.CharField(max_length=100)
    stabilizer_required = models.CharField(max_length=100)
    gross_refrigerator_capacity = models.CharField(max_length=100)
    number_of_refrigerator_shelves = models.CharField(max_length=100)
    refrigerator_interior_light = models.CharField(max_length=100)
    egg_tray = models.CharField(max_length=100)
    number_of_refrigerator_drawers = models.CharField(max_length=100)
    number_of_refrigerator_bottle_racks = models.CharField(max_length=100)
    gross_freezer_capacity = models.CharField(max_length=100)
    number_of_freezer_door_bins = models.CharField(max_length=100)
    freezer_interior_light = models.CharField(max_length=100)
    ice_cube_tray_type = models.CharField(max_length=100)
    launch_year = models.CharField(max_length=100)
    net_total_capacity = models.CharField(max_length=100)
    child_lock = models.CharField(max_length=100)
    wheel_support = models.CharField(max_length=100)
    cooling_refrigerant = models.CharField(max_length=100)
    technology_used = models.CharField(max_length=100)
    net_height = models.CharField(max_length=100)
    net_depth = models.CharField(max_length=100)
    net_width = models.CharField(max_length=100)
    weight = models.CharField(max_length=100)

    def __str__(self):
        return self.product_name


class Laptop(Product):
    model_number = models.CharField(max_length=100)
    part_number = models.CharField(max_length=100)
    series = models.CharField(max_length=100)
    color = models.CharField(max_length=100)
    type = models.CharField(max_length=100)
    suitable_for = models.CharField(max_length=100)
    power_supply = models.CharField(max_length=100)
    battery_cell = models.CharField(max_length=100)
    ms_office_provided = models.CharField(max_length=100)
    processor_brand = models.CharField(max_length=100)
    processor_name = models.CharField(max_length=100)
    processor_generation = models.CharField(max_length=100)
    ssd = models.CharField(max_length=100)
    ssd_capacity = models.CharField(max_length=100)
    ram = models.CharField(max_length=100)
    ram_type = models.CharField(max_length=100)
    processor_variant = models.CharField(max_length=100)
    clock_speed = models.CharField(max_length=100)
    cache = models.CharField(max_length=100)
    graphic_processor = models.CharField(max_length=100)
    number_of_cores = models.CharField(max_length=100)
    os_architecture = models.CharField(max_length=100)
    operating_system = models.CharField(max_length=100)
    system_architecture = models.CharField(max_length=100)
    mic_in = models.CharField(max_length=100)
    usb_port = models.CharField(max_length=100)
    hdmi_port = models.CharField(max_length=100)
    multi_card_slot = models.CharField(max_length=100)
    touchscreen = models.CharField(max_length=100)
    screen_size = models.CharField(max_length=100)
    screen_resolution = models.CharField(max_length=100)
    screen_type = models.CharField(max_length=500)
    speakers = models.CharField(max_length=100)
    internal_mic = models.CharField(max_length=100)
    sound_properties = models.CharField(max_length=100)
    wireless_lan = models.CharField(max_length=100)
    bluetooth = models.CharField(max_length=100)
    dimensions = models.CharField(max_length=100)
    weight = models.CharField(max_length=100)
    disk_drive = models.CharField(max_length=100)
    web_camera = models.CharField(max_length=100)
    finger_print_sensor = models.CharField(max_length=100)
    security_chip = models.CharField(max_length=100)
    keyboard = models.CharField(max_length=100)
    backlit_keyboard = models.CharField(max_length=100)
    pointer_device = models.CharField(max_length=100)
    included_software = models.CharField(max_length=100)
    additional_features = models.CharField(max_length=100)

    def __str__(self):
        return self.product_name


class Headphones(Product):
    model_name = models.CharField(max_length=500)
    color = models.CharField(max_length=500)
    headphone_type = models.CharField(max_length=500)
    inline_remote = models.CharField(max_length=500)
    sales_package = models.CharField(max_length=500)
    connectivity = models.CharField(max_length=500)
    headphone_design = models.CharField(max_length=500)
    foldable_collapsible = models.CharField(max_length=500)
    deep_bass = models.CharField(max_length=500)
    water_resistant = models.CharField(max_length=500)
    designed_for = models.CharField(max_length=500)
    with_microphone = models.CharField(max_length=500)
    battery_life = models.CharField(max_length=500)
    charging_time = models.CharField(max_length=500)

    def __str__(self):
        return self.product_name


class Tablets(Product):
    model_number = models.CharField(max_length=500)
    model_name = models.CharField(max_length=500)
    color = models.CharField(max_length=500)
    connectivity = models.CharField(max_length=500)
    os = models.CharField(max_length=500)
    operating_system_version = models.CharField(max_length=500)
    ram = models.CharField(max_length=500)
    voice_call = models.CharField(max_length=500)
    display_resolution_type = models.CharField(max_length=500)
    video_call = models.CharField(max_length=500)
    supported_network = models.CharField(max_length=500)
    battery_features = models.CharField(max_length=500)
    processor_type = models.CharField(max_length=500)
    display_size = models.CharField(max_length=500)
    sales_package = models.CharField(max_length=500)
    display_resolution = models.CharField(max_length=500)
    primary_camera = models.CharField(max_length=500)
    internal_storage = models.CharField(max_length=500)
    processor_speed = models.CharField(max_length=500)
    sim_type = models.CharField(max_length=500)
    battery_capacity = models.CharField(max_length=500)
    battery_type = models.CharField(max_length=500)
    frame_rate = models.CharField(max_length=500)
    bluetooth_version = models.CharField(max_length=500)
    usb = models.CharField(max_length=500)
    wi_fi_version = models.CharField(max_length=500)
    display_type = models.CharField(max_length=500)

    def __str__(self):
        return self.product_name


class Camera(Product):
    brand = models.CharField(max_length=500)
    model_number = models.CharField(max_length=500)
    series = models.CharField(max_length=500)
    model_name = models.CharField(max_length=500)
    slr_variant = models.CharField(max_length=500)
    brand_color = models.CharField(max_length=500)
    type = models.CharField(max_length=500)
    color = models.CharField(max_length=500)
    effective_pixels = models.CharField(max_length=500)
    tripod_socket = models.CharField(max_length=500)
    wifi = models.CharField(max_length=500)
    sensor_type = models.CharField(max_length=500)
    image_sensor_size = models.CharField(max_length=500)
    iso_rating = models.CharField(max_length=500)
    lens_mount = models.CharField(max_length=500)
    dust_reduction = models.CharField(max_length=500)
    focus_points = models.CharField(max_length=500)
    shutter_speed = models.CharField(max_length=500)
    self_timer = models.CharField(max_length=500)
    continuous_shots = models.CharField(max_length=500)
    image_format = models.CharField(max_length=500)
    video_resolution = models.CharField(max_length=500)
    video_quality = models.CharField(max_length=500)
    display_type = models.CharField(max_length=500)
    display_size = models.CharField(max_length=500)
    touch_screen = models.CharField(max_length=500)
    compatible_card = models.CharField(max_length=500)
    battery_type = models.CharField(max_length=500)
    width = models.CharField(max_length=500)
    height = models.CharField(max_length=500)
    depth = models.CharField(max_length=500)
    weight = models.CharField(max_length=500)

    def __str__(self):
        return self.product_name
    
class Fashion(models.Model):
    title = models.CharField(max_length=500)
    category = models.CharField(max_length=500)
    gender= models.CharField(max_length=500)
    price = models.IntegerField()
    rating = models.FloatField()
    company_name=models.CharField(max_length=500)
    available_offers= models.TextField(max_length=100000)
    service= models.TextField(max_length=100000)
    color = models.CharField(max_length=500)
    size=models.CharField(max_length=500)
    seller = models.CharField(max_length=500)
    product_details=models.TextField(max_length=20000)
    img1 = models.ImageField(upload_to='pic')
    img2 = models.ImageField(upload_to='pic')
    img3 = models.ImageField(upload_to='pic')
    img4 = models.ImageField(upload_to='pic')
    img5 = models.ImageField(upload_to='pic')
    def __str__(self):
        return self.title

class Books(models.Model):
    title = models.CharField(max_length=500)
    category = models.CharField(max_length=500)
    author= models.CharField(max_length=500)
    price = models.IntegerField()
    rating = models.FloatField()
    available_offers= models.TextField(max_length=100000)
    service= models.TextField(max_length=100000)
    seller = models.CharField(max_length=500)
    description=models.TextField(max_length=100000)
    specification= models.TextField(max_length=20000)
    highlights= models.TextField(max_length=100000)
    info=models.CharField(max_length=5000)
    img1 = models.ImageField(upload_to='pic')
    def __str__(self):
        return self.title

# Create your models here.
